name: Sync selected files to Project-Aegis

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.public-include'
      - '.public-exclude'
      - 'src/**'
      - 'docs/**'
      - 'data/**'
      - 'families/**'
      - 'scripts/**'
      - 'README.aegis.md'
      - 'LICENSE'

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      AEGIS_OWNER: ${{ vars.AEGIS_OWNER || 'jhun5568' }}
      AEGIS_REPO:  ${{ vars.AEGIS_REPO  || 'Project-Aegis' }}
      AEGIS_BRANCH: ${{ vars.AEGIS_BRANCH || 'main' }}

    steps:
      - name: Check out Private (Auto-CVS-Project)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install rsync & ripgrep
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync ripgrep

      - name: Prepare export staging
        run: |
          rm -rf public_export && mkdir -p public_export
          echo "=== Include from .public-include ==="
          while IFS= read -r line; do
            [[ -z "$line" || "$line" =~ ^# ]] && continue
            echo "Include: $line"
            # rsync로 누적 복사
            rsync -avr --prune-empty-dirs --relative "$line" public_export/ || true
          done < .public-include

          echo "=== Exclude patterns from .public-exclude ==="
          # ripgrep로 제외 목록 제거
          while IFS= read -r pattern; do
            [[ -z "$pattern" || "$pattern" =~ ^# ]] && continue
            echo "Exclude pattern: $pattern"
            # 일치 파일 삭제
            rg --files -g "!public_export/**" > /dev/null 2>&1 || true
          done < /dev/null

          # 실제 제외 수행 (find + grep 패턴)
          while IFS= read -r pattern; do
            [[ -z "$pattern" || "$pattern" =~ ^# ]] && continue
            # glob 패턴 대응: fd가 있으면 좋지만 기본 find로 대체
            # -name 매칭이 glob 한계가 있어 대표 패턴 위주로 강하게 차단
            find public_export -type f -name "${pattern//**/*}" -print -delete 2>/dev/null || true
            # 디렉토리 패턴
            if [[ "$pattern" == */** ]]; then
              dir="${pattern%/**}"
              rm -rf "public_export/$dir" 2>/dev/null || true
            fi
          done < .public-exclude

          # README 치환 (Aegis 전용)
          if [ -f README.aegis.md ]; then
            cp README.aegis.md public_export/README.md
          fi

      - name: Clone target public repository
        run: |
          git config --global user.name "Auto Sync Bot"
          git config --global user.email "actions@github.com"

          git clone --depth 1 "https://${{ secrets.AEGIS_TOKEN }}@github.com/${{ env.AEGIS_OWNER }}/${{ env.AEGIS_REPO }}.git" out_repo
          cd out_repo
          git checkout -B "${{ env.AEGIS_BRANCH }}"

          # 동기화: out_repo 내용을 public_export로 교체
          rsync -av --delete --exclude ".git" ../public_export/ ./

          # 변경사항 커밋/푸시
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            git commit -m "chore(sync): update from Auto-CVS-Project at ${TS}"
            git push origin "${{ env.AEGIS_BRANCH }}"
          fi
